"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[4062],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>f});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=u(r),f=o,m=d["".concat(p,".").concat(f)]||d[f]||c[f]||a;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var u=2;u<a;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},11481:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>y,contentTitle:()=>f,default:()=>v,frontMatter:()=>d,metadata:()=>m,toc:()=>h});var n=r(3905),o=Object.defineProperty,a=Object.defineProperties,i=Object.getOwnPropertyDescriptors,l=Object.getOwnPropertySymbols,p=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,s=(e,t,r)=>t in e?o(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,c=(e,t)=>{for(var r in t||(t={}))p.call(t,r)&&s(e,r,t[r]);if(l)for(var r of l(t))u.call(t,r)&&s(e,r,t[r]);return e};const d={id:"upload",title:"$upload"},f=void 0,m={unversionedId:"REST/upload",id:"version-18/REST/upload",title:"$upload",description:"Returns an ID of the file uploaded to the server",source:"@site/versioned_docs/version-18/REST/$upload.md",sourceDirName:"REST",slug:"/REST/upload",permalink:"/docs/ja/18/REST/upload",draft:!1,tags:[],version:"18",frontMatter:{id:"upload",title:"$upload"},sidebar:"docs",previous:{title:"$info",permalink:"/docs/ja/18/REST/info"},next:{title:"{dataClass}",permalink:"/docs/ja/18/REST/{dataClass}"}},y={},h=[{value:"Description",id:"description",level:2},{value:"Image upload example",id:"image-upload-example",level:2}],b={toc:h};function v(e){var t,r=e,{components:o}=r,s=((e,t)=>{var r={};for(var n in e)p.call(e,n)&&t.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&l)for(var n of l(e))t.indexOf(n)<0&&u.call(e,n)&&(r[n]=e[n]);return r})(r,["components"]);return(0,n.kt)("wrapper",(t=c(c({},b),s),a(t,i({components:o,mdxType:"MDXLayout"}))),(0,n.kt)("p",null,"Returns an ID of the file uploaded to the server\t"),(0,n.kt)("h2",c({},{id:"description"}),"Description"),(0,n.kt)("p",null,"Post this request when you have a file that you want to upload to the Server. If you have an image, you pass ",(0,n.kt)("inlineCode",{parentName:"p"},"$rawPict=true"),". For all other files, you pass ",(0,n.kt)("inlineCode",{parentName:"p"},"$binary=true"),"."),(0,n.kt)("p",null,"You can modify the timeout, which by default is 120 seconds, by passing a value to the ",(0,n.kt)("inlineCode",{parentName:"p"},"$timeout parameter"),"."),(0,n.kt)("h2",c({},{id:"image-upload-example"}),"Image upload example"),(0,n.kt)("p",null,"To upload an image, you must first select the file object on the client using the HTML 5 built-in API for using file from a web application. 4D uses the MIME type attribute of the file object so it can handle it appropriately."),(0,n.kt)("p",null,"Then, we upload the selected image to 4D Server:"),(0,n.kt)("p",null," ",(0,n.kt)("inlineCode",{parentName:"p"},"POST  /rest/$upload?$rawPict=true")," "),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Result"),":"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},'{ "ID": "D507BC03E613487E9B4C2F6A0512FE50" }')),(0,n.kt)("p",null," Afterwards, you use this ID to add it to an attribute using ",(0,n.kt)("a",c({parentName:"p"},{href:"/docs/ja/18/REST/method#methodupdate"}),(0,n.kt)("inlineCode",{parentName:"a"},"$method=update"))," to add the image to an entity:"),(0,n.kt)("p",null," ",(0,n.kt)("inlineCode",{parentName:"p"},"POST  /rest/Employee/?$method=update")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"POST data"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),'{\n    __KEY: "12",\n    __STAMP: 4,\n    photo: { "ID": "D507BC03E613487E9B4C2F6A0512FE50" } \n}\n')),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Response"),":"),(0,n.kt)("p",null,"The modified entity is returned:"),(0,n.kt)("pre",null,(0,n.kt)("code",c({parentName:"pre"},{}),'{\n    "__KEY": "12", \n    "__STAMP": 5, \n    "uri": "http://127.0.0.1:8081/rest/Employee(12)", \n    "ID": 12, \n    "firstName": "John", \n    "firstName": "Smith",\n    "photo":\n    {\n        "__deferred":\n        {\n            "uri": "/rest/Employee(12)/photo?$imageformat=best&$version=1&$expand=photo",\n            "image": true\n        }\n    },}\n')))}v.isMDXComponent=!0}}]);