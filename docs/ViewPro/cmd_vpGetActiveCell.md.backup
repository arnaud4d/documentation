---
id: vpGetActiveCell
title: VP Get active cell
---

The `VP Get active cell` command <!-- REF _command_.VP_Get_active_cell.Summary -->returns a new range object referencing the cell which has the focus and where new data will be entered (the active cell)<!-- END REF -->. 


<!-- REF _command_.VP_Get_active_cell.Syntax -->**VP Get active cell** (  *vpAreaName* : Text { ; *sheet* : Longint } ) : Object<!-- END REF -->  

<details><summary>History</summary>
|Version|Changes|
|---|---|
|v17 R6|Added|
</details>

<!-- REF _command_.VP_Get_active_cell.Params -->

|Parameter|Type| |Description|
|---|---|---|---|
|vpAreaName  |Text|->|4D View Pro area form object name|
|sheet  |Longint|->|Sheet index (current sheet if omitted)|
|Result  |Object|<-|Range object of single cell|
<!-- END REF -->  

### Description

In *vpAreaName*, pass the name of the 4D View Pro area. If you pass a name that does not exist, an error is returned.

In the optional *sheet* parameter, you can designate a specific spreadsheet where the range will be defined (counting begins at 0). If omitted, the current spreadsheet is used by default. You can explicitly select the current spreadsheet with the following constant:

*	<!-- INCLUDE vk_current_sheet2.Syntax -->


### Example 

The following code:

```4d
$activeCell:=VP Get active cell("myVPArea")
 
  //returns a range object containing: 
  //$activeCell.ranges[0].column=3
  //$activeCell.ranges[0].row=4
  //$activeCell.ranges[0].sheet=0
```

will retrieve the coordinates of the active cell:

![](assets/en/ViewPro/cmd_vpGetActiveCell.PNG)